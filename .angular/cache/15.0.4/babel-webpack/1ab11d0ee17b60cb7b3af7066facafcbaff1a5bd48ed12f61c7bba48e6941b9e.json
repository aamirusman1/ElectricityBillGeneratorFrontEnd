{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminGetAllBillsFormComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Username Required!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Password Required!! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_div_16_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bill_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" BillID: \", bill_r7.billId, \", ConsumerID: \", bill_r7.consumerId.consumerId, \", Month: \", bill_r7.month, \", Year: \", bill_r7.year, \", Units Consumed: \", bill_r7.unitsConsumed, \", Total Bill Amount: \", bill_r7.totalAmount, \" \");\n  }\n}\nfunction AdminGetAllBillsFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, AdminGetAllBillsFormComponent_div_16_li_2_Template, 2, 6, \"li\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.Bills);\n  }\n}\nfunction AdminGetAllBillsFormComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Bills Found! \");\n  }\n}\nexport class AdminGetAllBillsFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.Bills = [];\n    this.isHidden = false;\n    this.userForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required, Validators.pattern('^(?=.[a-z])(?=.[A-Z])(?=.[0-9])(?=.[!@#$%^&*_=+-]).{8,12}$')])\n    });\n  }\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  onSubmit(data) {\n    this.userName = data.username;\n    this.password = data.password;\n    this.billService.getAllBillsAdmin(this.userName, this.password).subscribe(bills => this.Bills = bills);\n    this.isHidden = true;\n  }\n  get getUserName() {\n    return this.userForm.get('username');\n  }\n  get getPassword() {\n    return this.userForm.get('password');\n  }\n}\nAdminGetAllBillsFormComponent.ɵfac = function AdminGetAllBillsFormComponent_Factory(t) {\n  return new (t || AdminGetAllBillsFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nAdminGetAllBillsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminGetAllBillsFormComponent,\n  selectors: [[\"app-admin-get-all-bills-form\"]],\n  decls: 21,\n  vars: 11,\n  consts: [[\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter admin username\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"for\", \"lastname\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter admin password\"], [\"style\", \"color: darkblue\", 4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"], [2, \"color\", \"red\"], [2, \"color\", \"darkblue\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AdminGetAllBillsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Get All Bill Reports\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminGetAllBillsFormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit(ctx.userForm.value);\n      });\n      i0.ɵɵelement(5, \"input\", 1);\n      i0.ɵɵtemplate(6, AdminGetAllBillsFormComponent_span_6_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelementStart(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵtemplate(10, AdminGetAllBillsFormComponent_span_10_Template, 2, 0, \"span\", 2);\n      i0.ɵɵtemplate(11, AdminGetAllBillsFormComponent_span_11_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementStart(12, \"p\")(13, \"button\", 6);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 7);\n      i0.ɵɵtemplate(16, AdminGetAllBillsFormComponent_div_16_Template, 3, 1, \"div\", 8);\n      i0.ɵɵtemplate(17, AdminGetAllBillsFormComponent_ng_template_17_Template, 1, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(19, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AdminGetAllBillsFormComponent_Template_button_click_19_listener() {\n        return ctx.isHidden = !ctx.isHidden;\n      });\n      i0.ɵɵtext(20, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(18);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.getUserName && ctx.getUserName.invalid && ctx.getUserName.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.getPassword && ctx.getPassword.invalid && ctx.getPassword.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.getPassword && ctx.getPassword.dirty);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkBillsStatus())(\"ngIfElse\", _r4);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tZ2V0LWFsbC1iaWxscy1mb3JtL2FkbWluLWdldC1hbGwtYmlsbHMtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZGRlbiB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;IC4BjEC,gCAGG;IAAAA,mCAAmB;IAAAA,iBACrB;;;;;IAQDA,gCAGG;IAAAA,oCACH;IAAAA,iBAAO;;;;;IACPA,gCACG;IAAAA,wHAEH;IAAAA,iBAAO;;;;;IAQHA,0BAA+B;IAC7BA,YAGF;IAAAA,iBAAK;;;;IAHHA,eAGF;IAHEA,yPAGF;;;;;IANJA,2BAAoD;IAEhDA,oFAIK;IACPA,iBAAK;;;;IALkBA,eAAQ;IAARA,sCAAQ;;;;;IAOLA,gCAAgB;;;ADtD9C,OAAM,MAAOC,6BAA6B;EAkBxCC,YAAoBC,WAA+B;IAA/B,gBAAW,GAAXA,WAAW;IAf/B,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAY,KAAK;IAIzB,aAAQ,GAAG,IAAIL,SAAS,CAAC;MACvBM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACQ,OAAO,CAChB,4DAA4D,CAC7D,CACF;KACF,CAAC;EAEoD;EAbtDC,gBAAgB;IACd,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,IAAI,CAAC;EAC/B;EAaAC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACR,QAAQ;IAC7B,IAAI,CAACE,QAAQ,GAAGM,IAAI,CAACN,QAAQ;IAC7B,IAAI,CAACH,WAAW,CACbW,gBAAgB,CAAC,IAAI,CAACD,QAAQ,EAAE,IAAI,CAACP,QAAQ,CAAC,CAC9CS,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACP,KAAK,GAAGO,KAAM,CAAC;IAC7C,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC;EACtC;EACA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACF,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC;EACtC;;AAlCWnB,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1C1B,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,+BAKC;MAHCA;QAAA,OAAY2B,gCAAwB;MAAA,EAAC;MAmBrC3B,2BAKE;MACFA,gFAIC;MACDA,gCAAsB;MAAAA,yBAAS;MAAAA,iBAAQ;MACvCA,2BAKE;MACFA,kFAIO;MACPA,kFAGO;MACPA,0BAAG;MACmDA,uBAAM;MAAAA,iBAAS;MAGvEA,+BAA+C;MAC7CA,gFAQM;MACNA,iIAA0D;MAC1DA,mCAAuC;MAA/BA;QAAA;MAAA,EAA8B;MAACA,qBAAI;MAAAA,iBAAS;;;;MA3DpDA,eAAyB;MAAzBA,sCAAyB;MAHzBA,wCAAsB;MA4BnBA,eAA+D;MAA/DA,4FAA+D;MAY/DA,eAA+D;MAA/DA,4FAA+D;MAGnCA,eAAsC;MAAtCA,+DAAsC;MAK3DA,eAA6B;MAA7BA,+CAA6B;MAGrBA,eAA0B;MAA1BA,uCAA0B;MACtCA,eAA0B;MAA1BA,6CAA0B","names":["FormControl","FormGroup","Validators","i0","AdminGetAllBillsFormComponent","constructor","billService","username","required","password","pattern","checkBillsStatus","Bills","length","onSubmit","data","userName","getAllBillsAdmin","subscribe","bills","isHidden","getUserName","userForm","get","getPassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-get-all-bills-form\\admin-get-all-bills-form.component.ts","C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-get-all-bills-form\\admin-get-all-bills-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Bill } from '../bill';\nimport { BillServiceService } from '../bill-service.service';\n\n@Component({\n  selector: 'app-admin-get-all-bills-form',\n  templateUrl: './admin-get-all-bills-form.component.html',\n  styleUrls: ['./admin-get-all-bills-form.component.css'],\n})\nexport class AdminGetAllBillsFormComponent {\n  userName!: string;\n  password!: string;\n  Bills: Bill[] = [];\n  isHidden: boolean = false;\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  userForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\n        '^(?=.[a-z])(?=.[A-Z])(?=.[0-9])(?=.[!@#$%^&*_=+-]).{8,12}$'\n      ),\n    ]),\n  });\n\n  constructor(private billService: BillServiceService) {}\n\n  onSubmit(data: any) {\n    this.userName = data.username;\n    this.password = data.password;\n    this.billService\n      .getAllBillsAdmin(this.userName, this.password)\n      .subscribe((bills) => (this.Bills = bills));\n    this.isHidden = true;\n  }\n\n  get getUserName() {\n    return this.userForm.get('username');\n  }\n  get getPassword() {\n    return this.userForm.get('password');\n  }\n}\n","<h1>Admin</h1>\n<h3>Get All Bill Reports</h3>\n<form\n  [formGroup]=\"userForm\"\n  (ngSubmit)=\"onSubmit(userForm.value)\"\n  method=\"get\"\n  [class.hidden]=\"isHidden\"\n>\n  <!-- <input\n    type=\"text\"\n    id=\"username\"\n    name=\"userName\"\n    formControlName=\"userName\"\n    placeholder=\"Enter admin username\"\n  />\n  <input\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    formControlName=\"password\"\n    placeholder=\"Enter admin password\"\n  />\n  <button type=\"submit\">Submit</button> -->\n  <input\n    type=\"text\"\n    id=\"username\"\n    formControlName=\"username\"\n    placeholder=\"Enter admin username\"\n  />\n  <span\n    style=\"color: red\"\n    *ngIf=\"getUserName && getUserName.invalid && getUserName.touched\"\n    >Username Required!!</span\n  >\n  <label for=\"lastname\">Password </label>\n  <input\n    type=\"password\"\n    id=\"password\"\n    formControlName=\"password\"\n    placeholder=\"Enter admin password\"\n  />\n  <span\n    style=\"color: red\"\n    *ngIf=\"getPassword && getPassword.invalid && getPassword.touched\"\n    >Password Required!!\n  </span>\n  <span style=\"color: darkblue\" *ngIf=\"getPassword && getPassword.dirty\"\n    >Password should have minimum 8 characters, at least 1 uppercase letter, 1\n    lowercase letter and 1 number\n  </span>\n  <p>\n    <button [disabled]=\"userForm.invalid\" type=\"submit\">Submit</button>\n  </p>\n</form>\n<div class=\"result\" [class.hidden]=\"!isHidden\">\n  <div *ngIf=\"checkBillsStatus(); else noResultBlock\">\n    <ul>\n      <li *ngFor=\"let bill of Bills\">\n        BillID: {{ bill.billId }}, ConsumerID: {{ bill.consumerId.consumerId }},\n        Month: {{ bill.month }}, Year: {{ bill.year }}, Units Consumed:\n        {{ bill.unitsConsumed }}, Total Bill Amount: {{ bill.totalAmount }}\n      </li>\n    </ul>\n  </div>\n  <ng-template #noResultBlock>No Bills Found! </ng-template>\n  <button (click)=\"isHidden = !isHidden\">Back</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}