{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminGetAllBillsFormComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Username Required!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Password Required!! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_div_18_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bill_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" BillID: \", bill_r6.billId, \", ConsumerID: \", bill_r6.consumerId.consumerId, \", Month: \", bill_r6.month, \", Year: \", bill_r6.year, \", Units Consumed: \", bill_r6.unitsConsumed, \", Total Bill Amount: \", bill_r6.totalAmount, \" \");\n  }\n}\nfunction AdminGetAllBillsFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, AdminGetAllBillsFormComponent_div_18_li_2_Template, 2, 6, \"li\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Bills);\n  }\n}\nfunction AdminGetAllBillsFormComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Bills Found! \");\n  }\n}\nexport class AdminGetAllBillsFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.Bills = [];\n    this.isHidden = false;\n    this.userForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  onSubmit(data) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.billService.getAllBillsAdmin(this.AdminUserName, this.AdminPassword).subscribe(bills => this.Bills = bills);\n    this.isHidden = true;\n  }\n  get getUserName() {\n    return this.userForm.get('username');\n  }\n  get getPassword() {\n    return this.userForm.get('password');\n  }\n}\nAdminGetAllBillsFormComponent.ɵfac = function AdminGetAllBillsFormComponent_Factory(t) {\n  return new (t || AdminGetAllBillsFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nAdminGetAllBillsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminGetAllBillsFormComponent,\n  selectors: [[\"app-admin-get-all-bills-form\"]],\n  decls: 23,\n  vars: 10,\n  consts: [[\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter admin username\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter admin password\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"], [2, \"color\", \"red\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AdminGetAllBillsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Get All Bill Reports\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminGetAllBillsFormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit(ctx.userForm.value);\n      });\n      i0.ɵɵelementStart(5, \"label\", 1);\n      i0.ɵɵtext(6, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵtemplate(8, AdminGetAllBillsFormComponent_span_8_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵtemplate(13, AdminGetAllBillsFormComponent_span_13_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementStart(14, \"div\")(15, \"button\", 6);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 7);\n      i0.ɵɵtemplate(18, AdminGetAllBillsFormComponent_div_18_Template, 3, 1, \"div\", 8);\n      i0.ɵɵtemplate(19, AdminGetAllBillsFormComponent_ng_template_19_Template, 1, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(21, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AdminGetAllBillsFormComponent_Template_button_click_21_listener() {\n        return ctx.isHidden = !ctx.isHidden;\n      });\n      i0.ɵɵtext(22, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(20);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.getUserName && ctx.getUserName.invalid && ctx.getUserName.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getPassword && ctx.getPassword.invalid && ctx.getPassword.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkBillsStatus())(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tZ2V0LWFsbC1iaWxscy1mb3JtL2FkbWluLWdldC1hbGwtYmlsbHMtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZGRlbiB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICejEC,gCAGG;IAAAA,mCAAmB;IAAAA,iBACrB;;;;;IAUDA,gCAGG;IAAAA,oCACH;IAAAA,iBAAO;;;;;IAQHA,0BAA+B;IAC7BA,YAGF;IAAAA,iBAAK;;;;IAHHA,eAGF;IAHEA,yPAGF;;;;;IANJA,2BAAoD;IAEhDA,oFAIK;IACPA,iBAAK;;;;IALkBA,eAAQ;IAARA,sCAAQ;;;;;IAOLA,gCAAgB;;;ADvC9C,OAAM,MAAOC,6BAA6B;EAaxCC,YAAoBC,WAA+B;IAA/B,gBAAW,GAAXA,WAAW;IAV/B,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAY,KAAK;IAIzB,aAAQ,GAAG,IAAIL,SAAS,CAAC;MACvBM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KACpD,CAAC;EAEoD;EARtDE,gBAAgB;IACd,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,IAAI,CAAC;EAC/B;EAQAC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACC,aAAa,GAAGD,IAAI,CAACP,QAAQ;IAClC,IAAI,CAACS,aAAa,GAAGF,IAAI,CAACL,QAAQ;IAClC,IAAI,CAACH,WAAW,CACbW,gBAAgB,CAAC,IAAI,CAACF,aAAa,EAAE,IAAI,CAACC,aAAa,CAAC,CACxDE,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACR,KAAK,GAAGQ,KAAM,CAAC;IAC7C,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC;EACtC;EACA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACF,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC;EACtC;;AA7BWnB,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1C1B,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,+BAKC;MAHCA;QAAA,OAAY2B,gCAAwB;MAAA,EAAC;MAIrC3B,gCAAsB;MAAAA,0BAAU;MAAAA,iBAAQ;MACxCA,2BAME;MACFA,gFAIC;MACDA,qBAAM;MACNA,iCAAsB;MAAAA,2BAAU;MAAAA,iBAAQ;MACxCA,4BAME;MACFA,kFAIO;MACPA,4BAAK;MACiDA,uBAAM;MAAAA,iBAAS;MAGvEA,+BAA+C;MAC7CA,gFAQM;MACNA,iIAA0D;MAC1DA,mCAAuC;MAA/BA;QAAA;MAAA,EAA8B;MAACA,qBAAI;MAAAA,iBAAS;;;;MA5CpDA,eAAyB;MAAzBA,sCAAyB;MAHzBA,wCAAsB;MAenBA,eAA+D;MAA/DA,4FAA+D;MAc/DA,eAA+D;MAA/DA,4FAA+D;MAIxDA,eAA6B;MAA7BA,+CAA6B;MAGrBA,eAA0B;MAA1BA,uCAA0B;MACtCA,eAA0B;MAA1BA,6CAA0B","names":["FormControl","FormGroup","Validators","i0","AdminGetAllBillsFormComponent","constructor","billService","username","required","password","checkBillsStatus","Bills","length","onSubmit","data","AdminUserName","AdminPassword","getAllBillsAdmin","subscribe","bills","isHidden","getUserName","userForm","get","getPassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Wile Training\\angular\\AngularElectricityBillGenerator\\src\\app\\admin-get-all-bills-form\\admin-get-all-bills-form.component.ts","E:\\Wile Training\\angular\\AngularElectricityBillGenerator\\src\\app\\admin-get-all-bills-form\\admin-get-all-bills-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Bill } from '../bill';\r\nimport { BillServiceService } from '../bill-service.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-get-all-bills-form',\r\n  templateUrl: './admin-get-all-bills-form.component.html',\r\n  styleUrls: ['./admin-get-all-bills-form.component.css'],\r\n})\r\nexport class AdminGetAllBillsFormComponent {\r\n  AdminUserName!: string;\r\n  AdminPassword!: string;\r\n  Bills: Bill[] = [];\r\n  isHidden: boolean = false;\r\n  checkBillsStatus() {\r\n    return this.Bills.length != 0;\r\n  }\r\n  userForm = new FormGroup({\r\n    username: new FormControl('', [Validators.required]),\r\n    password: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  constructor(private billService: BillServiceService) {}\r\n\r\n  onSubmit(data: any) {\r\n    this.AdminUserName = data.username;\r\n    this.AdminPassword = data.password;\r\n    this.billService\r\n      .getAllBillsAdmin(this.AdminUserName, this.AdminPassword)\r\n      .subscribe((bills) => (this.Bills = bills));\r\n    this.isHidden = true;\r\n  }\r\n\r\n  get getUserName() {\r\n    return this.userForm.get('username');\r\n  }\r\n  get getPassword() {\r\n    return this.userForm.get('password');\r\n  }\r\n}\r\n","<h1>Admin</h1>\r\n<h3>Get All Bill Reports</h3>\r\n<form\r\n  [formGroup]=\"userForm\"\r\n  (ngSubmit)=\"onSubmit(userForm.value)\"\r\n  method=\"get\"\r\n  [class.hidden]=\"isHidden\"\r\n>\r\n  <label for=\"username\">Username: </label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"username\"\r\n    name=\"username\"\r\n    formControlName=\"username\"\r\n    placeholder=\"Enter admin username\"\r\n  />\r\n  <span\r\n    style=\"color: red\"\r\n    *ngIf=\"getUserName && getUserName.invalid && getUserName.touched\"\r\n    >Username Required!!</span\r\n  >\r\n  <br />\r\n  <label for=\"password\">Password: </label>\r\n  <input\r\n    type=\"password\"\r\n    id=\"password\"\r\n    name=\"password\"\r\n    formControlName=\"password\"\r\n    placeholder=\"Enter admin password\"\r\n  />\r\n  <span\r\n    style=\"color: red\"\r\n    *ngIf=\"getPassword && getPassword.invalid && getPassword.touched\"\r\n    >Password Required!!\r\n  </span>\r\n  <div>\r\n    <button [disabled]=\"userForm.invalid\" type=\"submit\">Submit</button>\r\n  </div>\r\n</form>\r\n<div class=\"result\" [class.hidden]=\"!isHidden\">\r\n  <div *ngIf=\"checkBillsStatus(); else noResultBlock\">\r\n    <ul>\r\n      <li *ngFor=\"let bill of Bills\">\r\n        BillID: {{ bill.billId }}, ConsumerID: {{ bill.consumerId.consumerId }},\r\n        Month: {{ bill.month }}, Year: {{ bill.year }}, Units Consumed:\r\n        {{ bill.unitsConsumed }}, Total Bill Amount: {{ bill.totalAmount }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <ng-template #noResultBlock>No Bills Found! </ng-template>\r\n  <button (click)=\"isHidden = !isHidden\">Back</button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}