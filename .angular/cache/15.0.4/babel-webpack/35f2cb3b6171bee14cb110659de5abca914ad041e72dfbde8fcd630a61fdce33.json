{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminAddUnitsFormComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Username Required!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminAddUnitsFormComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Password Required!! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminAddUnitsFormComponent_div_14_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bill_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" BillID: \", bill_r6.billId, \", ConsumerID: \", bill_r6.consumerId.consumerId, \", Month: \", bill_r6.month, \", Year: \", bill_r6.year, \", Units Consumed: \", bill_r6.unitsConsumed, \", Total Bill Amount: \", bill_r6.totalAmount, \" \");\n  }\n}\nfunction AdminAddUnitsFormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, AdminAddUnitsFormComponent_div_14_li_2_Template, 2, 6, \"li\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Bills);\n  }\n}\nfunction AdminAddUnitsFormComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Bills Found! \");\n  }\n}\nexport class AdminAddUnitsFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.isHidden = false;\n    this.addUnitsForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  onSubmit(data) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.isHidden = true;\n  }\n  get getUserName() {\n    return this.addUnitsForm.get('username');\n  }\n  get getPassword() {\n    return this.addUnitsForm.get('password');\n  }\n}\nAdminAddUnitsFormComponent.ɵfac = function AdminAddUnitsFormComponent_Factory(t) {\n  return new (t || AdminAddUnitsFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nAdminAddUnitsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminAddUnitsFormComponent,\n  selectors: [[\"app-admin-add-units-form\"]],\n  decls: 19,\n  vars: 10,\n  consts: [[\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter admin username\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter admin password\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"], [2, \"color\", \"red\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AdminAddUnitsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminAddUnitsFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit(ctx.userForm.value);\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵtemplate(4, AdminAddUnitsFormComponent_span_4_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, AdminAddUnitsFormComponent_span_9_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementStart(10, \"div\")(11, \"button\", 6);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 7);\n      i0.ɵɵtemplate(14, AdminAddUnitsFormComponent_div_14_Template, 3, 1, \"div\", 8);\n      i0.ɵɵtemplate(15, AdminAddUnitsFormComponent_ng_template_15_Template, 1, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(17, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AdminAddUnitsFormComponent_Template_button_click_17_listener() {\n        return ctx.isHidden = !ctx.isHidden;\n      });\n      i0.ɵɵtext(18, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(16);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.addUnitsForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.getUserName && ctx.getUserName.invalid && ctx.getUserName.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getPassword && ctx.getPassword.invalid && ctx.getPassword.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkBillsStatus())(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tYWRkLXVuaXRzLWZvcm0vYWRtaW4tYWRkLXVuaXRzLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICajEC,gCAGG;IAAAA,mCAAmB;IAAAA,iBACrB;;;;;IAUDA,gCAGG;IAAAA,oCACH;IAAAA,iBAAO;;;;;IAQHA,0BAA+B;IAC7BA,YAGF;IAAAA,iBAAK;;;;IAHHA,eAGF;IAHEA,yPAGF;;;;;IANJA,2BAAoD;IAEhDA,iFAIK;IACPA,iBAAK;;;;IALkBA,eAAQ;IAARA,sCAAQ;;;;;IAOLA,gCAAgB;;;ADtC9C,OAAM,MAAOC,0BAA0B;EAcrCC,YAAoBC,WAA+B;IAA/B,gBAAW,GAAXA,WAAW;IAN/B,aAAQ,GAAY,KAAK;IACzB,iBAAY,GAAG,IAAIL,SAAS,CAAC;MAC3BM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KACpD,CAAC;EAEoD;EAEtDE,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACC,aAAa,GAAGD,IAAI,CAACJ,QAAQ;IAClC,IAAI,CAACM,aAAa,GAAGF,IAAI,CAACF,QAAQ;IAElC,IAAI,CAACK,QAAQ,GAAG,IAAI;EACtB;EAEA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACC,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC;EAC1C;EACA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACF,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC;EAC1C;;AA5BWb,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTvCpB,+BAKC;MAHCA;QAAA,OAAYqB,gCAAwB;MAAA,EAAC;MAIrCrB,gCAAsB;MAAAA,0BAAU;MAAAA,iBAAQ;MACxCA,2BAME;MACFA,6EAIC;MACDA,qBAAM;MACNA,gCAAsB;MAAAA,0BAAU;MAAAA,iBAAQ;MACxCA,2BAME;MACFA,6EAIO;MACPA,4BAAK;MACiDA,uBAAM;MAAAA,iBAAS;MAGvEA,+BAA+C;MAC7CA,6EAQM;MACNA,8HAA0D;MAC1DA,mCAAuC;MAA/BA;QAAA;MAAA,EAA8B;MAACA,qBAAI;MAAAA,iBAAS;;;;MA5CpDA,sCAAyB;MAHzBA,4CAA0B;MAevBA,eAA+D;MAA/DA,4FAA+D;MAc/DA,eAA+D;MAA/DA,4FAA+D;MAIxDA,eAA6B;MAA7BA,+CAA6B;MAGrBA,eAA0B;MAA1BA,uCAA0B;MACtCA,eAA0B;MAA1BA,6CAA0B","names":["FormControl","FormGroup","Validators","i0","AdminAddUnitsFormComponent","constructor","billService","username","required","password","onSubmit","data","AdminUserName","AdminPassword","isHidden","getUserName","addUnitsForm","get","getPassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-add-units-form\\admin-add-units-form.component.ts","C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-add-units-form\\admin-add-units-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BillServiceService } from '../bill-service.service';\n\n@Component({\n  selector: 'app-admin-add-units-form',\n  templateUrl: './admin-add-units-form.component.html',\n  styleUrls: ['./admin-add-units-form.component.css'],\n})\nexport class AdminAddUnitsFormComponent {\n  AdminUserName!: string;\n  AdminPassword!: string;\n  consumerId!: number;\n  year!: number;\n  month!: string;\n  unitsConsumed!: number;\n\n  isHidden: boolean = false;\n  addUnitsForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private billService: BillServiceService) {}\n\n  onSubmit(data: any) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n\n    this.isHidden = true;\n  }\n\n  get getUserName() {\n    return this.addUnitsForm.get('username');\n  }\n  get getPassword() {\n    return this.addUnitsForm.get('password');\n  }\n}\n","<form\n  [formGroup]=\"addUnitsForm\"\n  (ngSubmit)=\"onSubmit(userForm.value)\"\n  method=\"get\"\n  [class.hidden]=\"isHidden\"\n>\n  <label for=\"username\">Username: </label>\n  <input\n    type=\"text\"\n    id=\"username\"\n    name=\"username\"\n    formControlName=\"username\"\n    placeholder=\"Enter admin username\"\n  />\n  <span\n    style=\"color: red\"\n    *ngIf=\"getUserName && getUserName.invalid && getUserName.touched\"\n    >Username Required!!</span\n  >\n  <br />\n  <label for=\"password\">Password: </label>\n  <input\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    formControlName=\"password\"\n    placeholder=\"Enter admin password\"\n  />\n  <span\n    style=\"color: red\"\n    *ngIf=\"getPassword && getPassword.invalid && getPassword.touched\"\n    >Password Required!!\n  </span>\n  <div>\n    <button [disabled]=\"userForm.invalid\" type=\"submit\">Submit</button>\n  </div>\n</form>\n<div class=\"result\" [class.hidden]=\"!isHidden\">\n  <div *ngIf=\"checkBillsStatus(); else noResultBlock\">\n    <ul>\n      <li *ngFor=\"let bill of Bills\">\n        BillID: {{ bill.billId }}, ConsumerID: {{ bill.consumerId.consumerId }},\n        Month: {{ bill.month }}, Year: {{ bill.year }}, Units Consumed:\n        {{ bill.unitsConsumed }}, Total Bill Amount: {{ bill.totalAmount }}\n      </li>\n    </ul>\n  </div>\n  <ng-template #noResultBlock>No Bills Found! </ng-template>\n  <button (click)=\"isHidden = !isHidden\">Back</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}