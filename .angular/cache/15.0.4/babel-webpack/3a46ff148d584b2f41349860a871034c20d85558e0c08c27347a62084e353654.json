{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ConsumerGetBillsByYearFormComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Consumer ID Required!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConsumerGetBillsByYearFormComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Year Required!! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConsumerGetBillsByYearFormComponent_div_18_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bill_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" BillID: \", bill_r6.billId, \", ConsumerID: \", bill_r6.consumerId.consumerId, \", Month: \", bill_r6.month, \", Year: \", bill_r6.year, \", Units Consumed: \", bill_r6.unitsConsumed, \", Total Bill Amount: \", bill_r6.totalAmount, \" \");\n  }\n}\nfunction ConsumerGetBillsByYearFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, ConsumerGetBillsByYearFormComponent_div_18_li_2_Template, 2, 6, \"li\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Bills);\n  }\n}\nfunction ConsumerGetBillsByYearFormComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Bills Found! \");\n  }\n}\nexport class ConsumerGetBillsByYearFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.Bills = [];\n    this.isHidden = false;\n    this.consumerForm = new FormGroup({\n      consumerId: new FormControl('', [Validators.required]),\n      year: new FormControl('', [Validators.required])\n    });\n  }\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  onSubmit(data) {\n    this.consumerId = data.username;\n    this.year = data.password;\n    this.billService.getBillsByYearConsumer(this.consumerId, this.year).subscribe(bills => this.Bills = bills);\n    this.isHidden = true;\n  }\n  get getConsumerId() {\n    return this.consumerForm.get('consumerId');\n  }\n  get getYear() {\n    return this.consumerForm.get('year');\n  }\n}\nConsumerGetBillsByYearFormComponent.ɵfac = function ConsumerGetBillsByYearFormComponent_Factory(t) {\n  return new (t || ConsumerGetBillsByYearFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nConsumerGetBillsByYearFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConsumerGetBillsByYearFormComponent,\n  selectors: [[\"app-consumer-get-bills-by-year-form\"]],\n  decls: 23,\n  vars: 10,\n  consts: [[\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"consumerId\"], [\"type\", \"text\", \"id\", \"consumerId\", \"name\", \"consumerId\", \"formControlName\", \"consumerId\", \"placeholder\", \"Enter Consumer ID\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"for\", \"year\"], [\"type\", \"year\", \"id\", \"year\", \"name\", \"year\", \"formControlName\", \"year\", \"placeholder\", \"Enter Year\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"], [2, \"color\", \"red\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ConsumerGetBillsByYearFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Get All Bill Reports By Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ConsumerGetBillsByYearFormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit(ctx.consumerForm.value);\n      });\n      i0.ɵɵelementStart(5, \"label\", 1);\n      i0.ɵɵtext(6, \"Consumer ID: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵtemplate(8, ConsumerGetBillsByYearFormComponent_span_8_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Year: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵtemplate(13, ConsumerGetBillsByYearFormComponent_span_13_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementStart(14, \"div\")(15, \"button\", 6);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 7);\n      i0.ɵɵtemplate(18, ConsumerGetBillsByYearFormComponent_div_18_Template, 3, 1, \"div\", 8);\n      i0.ɵɵtemplate(19, ConsumerGetBillsByYearFormComponent_ng_template_19_Template, 1, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(21, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ConsumerGetBillsByYearFormComponent_Template_button_click_21_listener() {\n        return ctx.isHidden = !ctx.isHidden;\n      });\n      i0.ɵɵtext(22, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(20);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.consumerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.getConsumerId && ctx.getConsumerId.invalid && ctx.getConsumerId.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getYear && ctx.getYear.invalid && ctx.getYear.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.consumerForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkBillsStatus())(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n    display: none;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29uc3VtZXItZ2V0LWJpbGxzLWJ5LXllYXItZm9ybS9jb25zdW1lci1nZXQtYmlsbHMtYnkteWVhci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0VBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZGVuIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICejEC,gCAGG;IAAAA,sCAAsB;IAAAA,iBACxB;;;;;IAUDA,gCAGG;IAAAA,gCACH;IAAAA,iBAAO;;;;;IAQHA,0BAA+B;IAC7BA,YAGF;IAAAA,iBAAK;;;;IAHHA,eAGF;IAHEA,yPAGF;;;;;IANJA,2BAAoD;IAEhDA,0FAIK;IACPA,iBAAK;;;;IALkBA,eAAQ;IAARA,sCAAQ;;;;;IAOLA,gCAAgB;;;ADvC9C,OAAM,MAAOC,mCAAmC;EAa9CC,YAAoBC,WAA+B;IAA/B,gBAAW,GAAXA,WAAW;IAV/B,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAY,KAAK;IAIzB,iBAAY,GAAG,IAAIL,SAAS,CAAC;MAC3BM,UAAU,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACtDC,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KAChD,CAAC;EAEoD;EARtDE,gBAAgB;IACd,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,IAAI,CAAC;EAC/B;EAQAC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACP,UAAU,GAAGO,IAAI,CAACC,QAAQ;IAC/B,IAAI,CAACN,IAAI,GAAGK,IAAI,CAACE,QAAQ;IACzB,IAAI,CAACV,WAAW,CACbW,sBAAsB,CAAC,IAAI,CAACV,UAAU,EAAE,IAAI,CAACE,IAAI,CAAC,CAClDS,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACR,KAAK,GAAGQ,KAAM,CAAC;IAC7C,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEA,IAAIC,aAAa;IACf,OAAO,IAAI,CAACC,YAAY,CAACC,GAAG,CAAC,YAAY,CAAC;EAC5C;EACA,IAAIC,OAAO;IACT,OAAO,IAAI,CAACF,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;EACtC;;AA7BWnB,mCAAmC;mBAAnCA,mCAAmC;AAAA;AAAnCA,mCAAmC;QAAnCA,mCAAmC;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhD1B,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,0BAAI;MAAAA,4CAA4B;MAAAA,iBAAK;MACrCA,+BAKC;MAHCA;QAAA,OAAY2B,oCAA4B;MAAA,EAAC;MAIzC3B,gCAAwB;MAAAA,6BAAa;MAAAA,iBAAQ;MAC7CA,2BAME;MACFA,sFAIC;MACDA,qBAAM;MACNA,iCAAkB;MAAAA,uBAAM;MAAAA,iBAAQ;MAChCA,4BAME;MACFA,wFAIO;MACPA,4BAAK;MACqDA,uBAAM;MAAAA,iBAAS;MAG3EA,+BAA+C;MAC7CA,sFAQM;MACNA,uIAA0D;MAC1DA,mCAAuC;MAA/BA;QAAA;MAAA,EAA8B;MAACA,qBAAI;MAAAA,iBAAS;;;;MA5CpDA,eAAyB;MAAzBA,sCAAyB;MAHzBA,4CAA0B;MAevBA,eAAqE;MAArEA,kGAAqE;MAcrEA,eAAmD;MAAnDA,gFAAmD;MAI5CA,eAAiC;MAAjCA,mDAAiC;MAGzBA,eAA0B;MAA1BA,uCAA0B;MACtCA,eAA0B;MAA1BA,6CAA0B","names":["FormControl","FormGroup","Validators","i0","ConsumerGetBillsByYearFormComponent","constructor","billService","consumerId","required","year","checkBillsStatus","Bills","length","onSubmit","data","username","password","getBillsByYearConsumer","subscribe","bills","isHidden","getConsumerId","consumerForm","get","getYear","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Wile Training\\angular\\AngularElectricityBillGenerator\\src\\app\\consumer-get-bills-by-year-form\\consumer-get-bills-by-year-form.component.ts","E:\\Wile Training\\angular\\AngularElectricityBillGenerator\\src\\app\\consumer-get-bills-by-year-form\\consumer-get-bills-by-year-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Bill } from '../bill';\r\nimport { BillServiceService } from '../bill-service.service';\r\n\r\n@Component({\r\n  selector: 'app-consumer-get-bills-by-year-form',\r\n  templateUrl: './consumer-get-bills-by-year-form.component.html',\r\n  styleUrls: ['./consumer-get-bills-by-year-form.component.css']\r\n})\r\nexport class ConsumerGetBillsByYearFormComponent {\r\n  consumerId: number | undefined;\r\n  year: number | undefined;\r\n  Bills: Bill[] = [];\r\n  isHidden: boolean = false;\r\n  checkBillsStatus() {\r\n    return this.Bills.length != 0;\r\n  }\r\n  consumerForm = new FormGroup({\r\n    consumerId: new FormControl('', [Validators.required]),\r\n    year: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  constructor(private billService: BillServiceService) {}\r\n\r\n  onSubmit(data: any) {\r\n    this.consumerId = data.username;\r\n    this.year = data.password;\r\n    this.billService\r\n      .getBillsByYearConsumer(this.consumerId, this.year)\r\n      .subscribe((bills) => (this.Bills = bills));\r\n    this.isHidden = true;\r\n  }\r\n\r\n  get getConsumerId() {\r\n    return this.consumerForm.get('consumerId');\r\n  }\r\n  get getYear() {\r\n    return this.consumerForm.get('year');\r\n  }\r\n\r\n}\r\n","<h1>Admin</h1>\r\n<h3>Get All Bill Reports By Year</h3>\r\n<form\r\n  [formGroup]=\"consumerForm\"\r\n  (ngSubmit)=\"onSubmit(consumerForm.value)\"\r\n  method=\"get\"\r\n  [class.hidden]=\"isHidden\"\r\n>\r\n  <label for=\"consumerId\">Consumer ID: </label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"consumerId\"\r\n    name=\"consumerId\"\r\n    formControlName=\"consumerId\"\r\n    placeholder=\"Enter Consumer ID\"\r\n  />\r\n  <span\r\n    style=\"color: red\"\r\n    *ngIf=\"getConsumerId && getConsumerId.invalid && getConsumerId.touched\"\r\n    >Consumer ID Required!!</span\r\n  >\r\n  <br />\r\n  <label for=\"year\">Year: </label>\r\n  <input\r\n    type=\"year\"\r\n    id=\"year\"\r\n    name=\"year\"\r\n    formControlName=\"year\"\r\n    placeholder=\"Enter Year\"\r\n  />\r\n  <span\r\n    style=\"color: red\"\r\n    *ngIf=\"getYear && getYear.invalid && getYear.touched\"\r\n    >Year Required!!\r\n  </span>\r\n  <div>\r\n    <button [disabled]=\"consumerForm.invalid\" type=\"submit\">Submit</button>\r\n  </div>\r\n</form>\r\n<div class=\"result\" [class.hidden]=\"!isHidden\">\r\n  <div *ngIf=\"checkBillsStatus(); else noResultBlock\">\r\n    <ul>\r\n      <li *ngFor=\"let bill of Bills\">\r\n        BillID: {{ bill.billId }}, ConsumerID: {{ bill.consumerId.consumerId }},\r\n        Month: {{ bill.month }}, Year: {{ bill.year }}, Units Consumed:\r\n        {{ bill.unitsConsumed }}, Total Bill Amount: {{ bill.totalAmount }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <ng-template #noResultBlock>No Bills Found! </ng-template>\r\n  <button (click)=\"isHidden = !isHidden\">Back</button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}