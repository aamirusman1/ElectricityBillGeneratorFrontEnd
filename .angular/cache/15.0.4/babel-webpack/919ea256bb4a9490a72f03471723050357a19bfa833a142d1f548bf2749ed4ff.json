{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminGetAllBillsFormComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \" username Required!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Password Required!! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminGetAllBillsFormComponent_div_21_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const bill_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bill_r6.billId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bill_r6.consumerId.consumerId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bill_r6.month);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bill_r6.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bill_r6.unitsConsumed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bill_r6.totalAmount);\n  }\n}\nfunction AdminGetAllBillsFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14)(2, \"h2\");\n    i0.ɵɵtext(3, \"All Bills\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"table\", 15)(5, \"thead\", 16)(6, \"tr\", 17)(7, \"th\", 18);\n    i0.ɵɵtext(8, \"billId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 18);\n    i0.ɵɵtext(10, \"consumerId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 18);\n    i0.ɵɵtext(12, \"month\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 18);\n    i0.ɵɵtext(14, \"year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\", 18);\n    i0.ɵɵtext(16, \"unitsConsumed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\", 18);\n    i0.ɵɵtext(18, \"totalAmount\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"tbody\");\n    i0.ɵɵtemplate(20, AdminGetAllBillsFormComponent_div_21_tr_20_Template, 13, 6, \"tr\", 19);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Bills);\n  }\n}\nfunction AdminGetAllBillsFormComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Bills Found! \");\n  }\n}\nexport class AdminGetAllBillsFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.Bills = [];\n    this.isHidden = false;\n    this.userForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  onSubmit(data) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.billService.getAllBillsAdmin(this.AdminUserName, this.AdminPassword).subscribe(bills => this.Bills = bills);\n    this.isHidden = true;\n  }\n  onBack() {\n    this.isHidden = !this.isHidden;\n    this.Bills = [];\n  }\n  get getUserName() {\n    return this.userForm.get('username');\n  }\n  get getPassword() {\n    return this.userForm.get('password');\n  }\n}\nAdminGetAllBillsFormComponent.ɵfac = function AdminGetAllBillsFormComponent_Factory(t) {\n  return new (t || AdminGetAllBillsFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nAdminGetAllBillsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminGetAllBillsFormComponent,\n  selectors: [[\"app-admin-get-all-bills-form\"]],\n  decls: 26,\n  vars: 10,\n  consts: [[1, \"container1\"], [\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [1, \"container2\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"Enter admin username\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter admin password\"], [\"type\", \"submit\", 1, \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"], [2, \"color\", \"red\"], [1, \"container\"], [1, \"table\", \"table-striped\"], [1, \"thead-dark\"], [1, \"table-info\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AdminGetAllBillsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminGetAllBillsFormComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit(ctx.userForm.value);\n      });\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Username \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, AdminGetAllBillsFormComponent_span_9_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"label\", 6);\n      i0.ɵɵtext(12, \" Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵtemplate(14, AdminGetAllBillsFormComponent_span_14_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\")(17, \"button\", 8);\n      i0.ɵɵtext(18, \" Submit \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"hr\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 9);\n      i0.ɵɵtemplate(21, AdminGetAllBillsFormComponent_div_21_Template, 21, 1, \"div\", 10);\n      i0.ɵɵtemplate(22, AdminGetAllBillsFormComponent_ng_template_22_Template, 1, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(24, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AdminGetAllBillsFormComponent_Template_button_click_24_listener() {\n        return ctx.onBack();\n      });\n      i0.ɵɵtext(25, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(23);\n      i0.ɵɵadvance(3);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.getUsername && ctx.getUsername.invalid && ctx.getUsername.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getPassword && ctx.getPassword.invalid && ctx.getPassword.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkBillsStatus())(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.container1[_ngcontent-%COMP%] {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n.container1[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h3[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n*[_ngcontent-%COMP%] {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.container2[_ngcontent-%COMP%] {\\r\\n  background-color: white;\\r\\n  margin: auto;\\r\\n  width: 40%;\\r\\n  border: 3px solid #28527a;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], .selectDiv[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 15px;\\r\\n  margin: 5px 0 22px 0;\\r\\n\\r\\n  border: none;\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\nhr[_ngcontent-%COMP%] {\\r\\n  border: 1px solid #fbeeac;\\r\\n  margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.submit[_ngcontent-%COMP%] {\\r\\n  background-color: #28527a;\\r\\n  color: white;\\r\\n  padding: 16px 20px;\\r\\n  margin: 8px 0;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n  width: 100%;\\r\\n  align-items: center;\\r\\n}\\r\\nh2[_ngcontent-%COMP%] {\\r\\n  align-items: center;\\r\\n}\\r\\n.result[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  color: #b4886b;\\r\\n  font-weight: bold;\\r\\n  display: block;\\r\\n  width: 150px;\\r\\n  float: left;\\r\\n  font-size: large;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%]:after {\\r\\n  content: \\\": \\\";\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tZ2V0LWFsbC1iaWxscy1mb3JtL2FkbWluLWdldC1hbGwtYmlsbHMtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UseUNBQXlDO0FBQzNDO0FBQ0E7O0VBRUUsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixVQUFVO0VBQ1YseUJBQXlCO0VBQ3pCLGFBQWE7QUFDZjs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLG9CQUFvQjs7RUFFcEIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGVBQWU7RUFDZixXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsWUFBWTtFQUNaLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5jb250YWluZXIxIHtcclxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG4uY29udGFpbmVyMSBoMSxcclxuaDMge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuKiB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLmNvbnRhaW5lcjIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB3aWR0aDogNDAlO1xyXG4gIGJvcmRlcjogM3B4IHNvbGlkICMyODUyN2E7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuaW5wdXQsXHJcbi5zZWxlY3REaXYge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbiAgbWFyZ2luOiA1cHggMCAyMnB4IDA7XHJcblxyXG4gIGJvcmRlcjogbm9uZTtcclxuICBiYWNrZ3JvdW5kOiAjZjFmMWYxO1xyXG59XHJcblxyXG5ociB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZiZWVhYztcclxuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG59XHJcblxyXG4uc3VibWl0IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjg1MjdhO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBwYWRkaW5nOiAxNnB4IDIwcHg7XHJcbiAgbWFyZ2luOiA4cHggMDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuaDIge1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuLnJlc3VsdCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbmxhYmVsIHtcclxuICBjb2xvcjogI2I0ODg2YjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB3aWR0aDogMTUwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgZm9udC1zaXplOiBsYXJnZTtcclxufVxyXG5sYWJlbDphZnRlciB7XHJcbiAgY29udGVudDogXCI6IFwiO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AdminGetAllBillsFormComponent","constructor","billService","username","required","password","checkBillsStatus","Bills","length","onSubmit","data","AdminUserName","AdminPassword","getAllBillsAdmin","subscribe","bills","isHidden","onBack","getUserName","userForm","get","getPassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-get-all-bills-form\\admin-get-all-bills-form.component.ts","C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-get-all-bills-form\\admin-get-all-bills-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Bill } from '../bill';\nimport { BillServiceService } from '../bill-service.service';\n\n@Component({\n  selector: 'app-admin-get-all-bills-form',\n  templateUrl: './admin-get-all-bills-form.component.html',\n  styleUrls: ['./admin-get-all-bills-form.component.css'],\n})\nexport class AdminGetAllBillsFormComponent {\n  AdminUserName!: string;\n  AdminPassword!: string;\n  Bills: Bill[] = [];\n  isHidden: boolean = false;\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  userForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private billService: BillServiceService) {}\n\n  onSubmit(data: any) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.billService\n      .getAllBillsAdmin(this.AdminUserName, this.AdminPassword)\n      .subscribe((bills) => (this.Bills = bills));\n    this.isHidden = true;\n  }\n\n  onBack() {\n    this.isHidden = !this.isHidden;\n    this.Bills = [];\n  }\n\n  get getUserName() {\n    return this.userForm.get('username');\n  }\n  get getPassword() {\n    return this.userForm.get('password');\n  }\n}\n","<!-- <h1>Admin</h1>\n<h3>Get All Bill Reports</h3>\n<form\n  [formGroup]=\"userForm\"\n  (ngSubmit)=\"onSubmit(userForm.value)\"\n  method=\"get\"\n  [class.hidden]=\"isHidden\"\n>\n  <label for=\"username\">Username: </label>\n  <input\n    type=\"text\"\n    id=\"username\"\n    name=\"username\"\n    formControlName=\"username\"\n    placeholder=\"Enter admin username\"\n  />\n  <span\n    style=\"color: red\"\n    *ngIf=\"getUserName && getUserName.invalid && getUserName.touched\"\n    >Username Required!!</span\n  >\n  <br />\n  <label for=\"password\">Password: </label>\n  <input\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    formControlName=\"password\"\n    placeholder=\"Enter admin password\"\n  />\n  <span\n    style=\"color: red\"\n    *ngIf=\"getPassword && getPassword.invalid && getPassword.touched\"\n    >Password Required!!\n  </span>\n  <div>\n    <button [disabled]=\"userForm.invalid\" type=\"submit\">Submit</button>\n  </div>\n</form>\n<div class=\"result\" [class.hidden]=\"!isHidden\">\n  <div *ngIf=\"checkBillsStatus(); else noResultBlock\">\n    <ul>\n      <li *ngFor=\"let bill of Bills\">\n        BillID: {{ bill.billId }}, ConsumerID: {{ bill.consumerId.consumerId }},\n        Month: {{ bill.month }}, Year: {{ bill.year }}, Units Consumed:\n        {{ bill.unitsConsumed }}, Total Bill Amount: {{ bill.totalAmount }}\n      </li>\n    </ul>\n  </div>\n  <ng-template #noResultBlock>No Bills Found! </ng-template>\n  <button (click)=\"onBack()\">Back</button>\n</div> -->\n<div class=\"container1\">\n  <h1>Admin</h1>\n  <form\n    [formGroup]=\"userForm\"\n    (ngSubmit)=\"onSubmit(userForm.value)\"\n    method=\"get\"\n    [class.hidden]=\"isHidden\"\n  >\n    <div class=\"container2\">\n      <hr />\n      <label for=\"userName\">Username </label>\n      <input\n        type=\"text\"\n        id=\"username\"\n        name=\"userName\"\n        formControlName=\"userName\"\n        placeholder=\"Enter admin username\"\n      />\n      <span\n        style=\"color: red\"\n        *ngIf=\"getUsername && getUsername.invalid && getUsername.touched\"\n      >\n        username Required!!</span\n      >\n      <br />\n\n      <label for=\"password\"> Password </label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        formControlName=\"password\"\n        placeholder=\"Enter admin password\"\n      />\n      <span\n        style=\"color: red\"\n        *ngIf=\"getPassword && getPassword.invalid && getPassword.touched\"\n        >Password Required!!\n      </span>\n      <br />\n      <div>\n        <button [disabled]=\"userForm.invalid\" type=\"submit\" class=\"submit\">\n          Submit\n        </button>\n      </div>\n      <hr />\n    </div>\n  </form>\n</div>\n\n<div class=\"result\" [class.hidden]=\"!isHidden\">\n  <div *ngIf=\"checkBillsStatus(); else noResultBlock\">\n    <div class=\"container\">\n      <h2>All Bills</h2>\n      <table class=\"table table-striped\">\n        <thead class=\"thead-dark\">\n          <tr class=\"table-info\">\n            <th scope=\"col\">billId</th>\n            <th scope=\"col\">consumerId</th>\n            <th scope=\"col\">month</th>\n            <th scope=\"col\">year</th>\n            <th scope=\"col\">unitsConsumed</th>\n            <th scope=\"col\">totalAmount</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let bill of Bills\">\n            <td>{{ bill.billId }}</td>\n            <td>{{ bill.consumerId.consumerId }}</td>\n            <td>{{ bill.month }}</td>\n            <td>{{ bill.year }}</td>\n            <td>{{ bill.unitsConsumed }}</td>\n            <td>{{ bill.totalAmount }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-template #noResultBlock>No Bills Found! </ng-template>\n  <button (click)=\"onBack()\">Back</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}