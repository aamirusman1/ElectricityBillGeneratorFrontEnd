{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BillServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllBillsConsumer(consumerId) {\n    return this.http.get(`http://localhost:8080/consumer/getAllBills?consumerId=${consumerId}`);\n  }\n  getBillsByMonthConsumer(consumerId, month, year) {\n    return this.http.get(`http://localhost:8080/consumer/getBillsByMonth?consumerId=${consumerId}&month=${month}&year=${year}`);\n  }\n  getBillsByYearConsumer(consumerId, year) {\n    return this.http.get(`http://localhost:8080/consumer/getBillsByYear?consumerId=${consumerId}&year=${year}`);\n  }\n  getAllBillsAdmin(userName, password) {\n    return this.http.get(`http://localhost:8080/admin/getBills?userName=${userName}&password=${password}`);\n  }\n  getBillsByMonthAdmin(userName, password, month, year) {\n    return this.http.get(`http://localhost:8080/admin/getBillsByMonth?userName=${userName}&password=${password}&month=${month}&year=${year}`);\n  }\n  getBillsByYearAdmin(userName, password, year) {\n    return this.http.get(`http://localhost:8080/admin/getBillsByYear?userName=${userName}&password=${password}&year=${year}`);\n  }\n  getBillsByAreaAdmin(userName, password, area) {\n    return this.http.get(`http://localhost:8080/admin/getBillsByArea?userName=${userName}&password=${password}&area=${area}`);\n  }\n  getBillsByCityAdmin(userName, password, city) {\n    return this.http.get(`http://localhost:8080/admin/getBillsByCity?userName=${userName}&password=${password}&city=${city}`);\n  }\n  addUnitsConsumed(userName, password, month, year, consumerId, unitsConsumed) {\n    // const headers = { 'content-type': 'application/json' };\n    return this.http.post(`http://localhost:8080/admin/addUnits?userName=${userName}&password=${password}&month=${month}&year=${year}&consumerId=${consumerId}&unitsConsumed=${unitsConsumed}`, '');\n  }\n  registerConsumer(consumer) {\n    const headers = {\n      'content-type': 'application/json'\n    };\n    const body = JSON.stringify(consumer);\n    console.log(body);\n    return this.http.post('http://localhost:8080/consumer/register', body, {\n      headers: headers\n    });\n  }\n}\nBillServiceService.ɵfac = function BillServiceService_Factory(t) {\n  return new (t || BillServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nBillServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BillServiceService,\n  factory: BillServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,mBAAmB,CAACC,UAAkB;IACpC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,yDAAyDD,UAAU,EAAE,CACtE;EACH;EAEAE,uBAAuB,CACrBF,UAAkB,EAClBG,KAAa,EACbC,IAAY;IAEZ,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAClB,6DAA6DD,UAAU,UAAUG,KAAK,SAASC,IAAI,EAAE,CACtG;EACH;EAEAC,sBAAsB,CAACL,UAAkB,EAAEI,IAAY;IACrD,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAClB,4DAA4DD,UAAU,SAASI,IAAI,EAAE,CACtF;EACH;EAEAE,gBAAgB,CAACC,QAAgB,EAAEC,QAAgB;IACjD,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAClB,iDAAiDM,QAAQ,aAAaC,QAAQ,EAAE,CACjF;EACH;EAEAC,oBAAoB,CAClBF,QAAgB,EAChBC,QAAgB,EAChBL,KAAa,EACbC,IAAY;IAEZ,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAClB,wDAAwDM,QAAQ,aAAaC,QAAQ,UAAUL,KAAK,SAASC,IAAI,EAAE,CACpH;EACH;EAEAM,mBAAmB,CACjBH,QAAgB,EAChBC,QAAgB,EAChBJ,IAAY;IAEZ,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAClB,uDAAuDM,QAAQ,aAAaC,QAAQ,SAASJ,IAAI,EAAE,CACpG;EACH;EAEAO,mBAAmB,CACjBJ,QAAgB,EAChBC,QAAgB,EAChBI,IAAY;IAEZ,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAClB,uDAAuDM,QAAQ,aAAaC,QAAQ,SAASI,IAAI,EAAE,CACpG;EACH;EAEAC,mBAAmB,CACjBN,QAAgB,EAChBC,QAAgB,EAChBM,IAAY;IAEZ,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAClB,uDAAuDM,QAAQ,aAAaC,QAAQ,SAASM,IAAI,EAAE,CACpG;EACH;EAEAC,gBAAgB,CACdR,QAAgB,EAChBC,QAAgB,EAChBL,KAAa,EACbC,IAAY,EACZJ,UAAkB,EAClBgB,aAAqB;IAErB;IACA,OAAO,IAAI,CAAClB,IAAI,CAACmB,IAAI,CACnB,iDAAiDV,QAAQ,aAAaC,QAAQ,UAAUL,KAAK,SAASC,IAAI,eAAeJ,UAAU,kBAAkBgB,aAAa,EAAE,EACpK,EAAE,CACH;EACH;EACAE,gBAAgB,CAACC,QAAkB;IACjC,MAAMC,OAAO,GAAG;MAAE,cAAc,EAAE;IAAkB,CAAE;IACtD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IACrCK,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,OAAO,IAAI,CAACvB,IAAI,CAACmB,IAAI,CACnB,yCAAyC,EACzCI,IAAI,EACJ;MAAED,OAAO,EAAEA;IAAO,CAAE,CACrB;EACH;;AA/FWxB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAA8B,SAAlB9B,kBAAkB;EAAA+B,YAFjB;AAAM","names":["BillServiceService","constructor","http","getAllBillsConsumer","consumerId","get","getBillsByMonthConsumer","month","year","getBillsByYearConsumer","getAllBillsAdmin","userName","password","getBillsByMonthAdmin","getBillsByYearAdmin","getBillsByAreaAdmin","area","getBillsByCityAdmin","city","addUnitsConsumed","unitsConsumed","post","registerConsumer","consumer","headers","body","JSON","stringify","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\bill-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { delay, map, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Bill } from './bill';\nimport { Consumer } from './consumer';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BillServiceService {\n  constructor(private http: HttpClient) {}\n\n  getAllBillsConsumer(consumerId: number): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/consumer/getAllBills?consumerId=${consumerId}`\n    );\n  }\n\n  getBillsByMonthConsumer(\n    consumerId: number,\n    month: string,\n    year: number\n  ): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/consumer/getBillsByMonth?consumerId=${consumerId}&month=${month}&year=${year}`\n    );\n  }\n\n  getBillsByYearConsumer(consumerId: number, year: number): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/consumer/getBillsByYear?consumerId=${consumerId}&year=${year}`\n    );\n  }\n\n  getAllBillsAdmin(userName: string, password: string): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/admin/getBills?userName=${userName}&password=${password}`\n    );\n  }\n\n  getBillsByMonthAdmin(\n    userName: string,\n    password: string,\n    month: string,\n    year: number\n  ): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/admin/getBillsByMonth?userName=${userName}&password=${password}&month=${month}&year=${year}`\n    );\n  }\n\n  getBillsByYearAdmin(\n    userName: string,\n    password: string,\n    year: number\n  ): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/admin/getBillsByYear?userName=${userName}&password=${password}&year=${year}`\n    );\n  }\n\n  getBillsByAreaAdmin(\n    userName: string,\n    password: string,\n    area: string\n  ): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/admin/getBillsByArea?userName=${userName}&password=${password}&area=${area}`\n    );\n  }\n\n  getBillsByCityAdmin(\n    userName: string,\n    password: string,\n    city: string\n  ): Observable<Bill[]> {\n    return this.http.get<Bill[]>(\n      `http://localhost:8080/admin/getBillsByCity?userName=${userName}&password=${password}&city=${city}`\n    );\n  }\n\n  addUnitsConsumed(\n    userName: string,\n    password: string,\n    month: string,\n    year: number,\n    consumerId: number,\n    unitsConsumed: number\n  ): Observable<Bill> {\n    // const headers = { 'content-type': 'application/json' };\n    return this.http.post<Bill>(\n      `http://localhost:8080/admin/addUnits?userName=${userName}&password=${password}&month=${month}&year=${year}&consumerId=${consumerId}&unitsConsumed=${unitsConsumed}`,\n      ''\n    );\n  }\n  registerConsumer(consumer: Consumer): Observable<Consumer> {\n    const headers = { 'content-type': 'application/json' };\n    const body = JSON.stringify(consumer);\n    console.log(body);\n    return this.http.post<Consumer>(\n      'http://localhost:8080/consumer/register',\n      body,\n      { headers: headers }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}