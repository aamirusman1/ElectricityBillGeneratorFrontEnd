{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminAddUnitsFormComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Units Added Successfully\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminAddUnitsFormComponent_ng_template_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"There was some error adding units. Please check the values again.\");\n  }\n}\nexport class AdminAddUnitsFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.result = '';\n    this.isHidden = false;\n    this.addUnitsForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      unitsConsumed: new FormControl('', [Validators.required]),\n      consumerId: new FormControl('', [Validators.required]),\n      year: new FormControl('', [Validators.required]),\n      month: new FormControl('', [Validators.required])\n    });\n  }\n  checkResultStatus() {\n    return this.result.length != 0;\n  }\n  onSubmit(data) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.consumerId = data.consumerId;\n    this.unitsConsumed = data.unitsConsumed;\n    this.month = data.month;\n    this.year = data.year;\n    this.billService.addUnitsConsumed(this.AdminUserName, this.AdminPassword, this.month, this.year, this.consumerId, this.unitsConsumed).subscribe(result => console.log(result));\n    console.log(this.result);\n    this.isHidden = true;\n  }\n  onBack() {\n    this.isHidden = !this.isHidden;\n    this.result = '';\n  }\n}\nAdminAddUnitsFormComponent.ɵfac = function AdminAddUnitsFormComponent_Factory(t) {\n  return new (t || AdminAddUnitsFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nAdminAddUnitsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminAddUnitsFormComponent,\n  selectors: [[\"app-admin-add-units-form\"]],\n  decls: 58,\n  vars: 8,\n  consts: [[\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter admin username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter admin password\", \"required\", \"\"], [\"for\", \"consumerId\"], [\"type\", \"text\", \"id\", \"consumerId\", \"name\", \"consumerId\", \"formControlName\", \"consumerId\", \"placeholder\", \"Enter consumer ID\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"unitsConsumed\", \"name\", \"unitsConsumed\", \"formControlName\", \"unitsConsumed\", \"placeholder\", \"Enter units consumed\", \"required\", \"\"], [\"for\", \"year\"], [\"type\", \"text\", \"id\", \"year\", \"name\", \"year\", \"formControlName\", \"year\", \"placeholder\", \"Enter year value\", \"required\", \"\"], [\"for\", \"month\"], [\"name\", \"month\", \"id\", \"month\", \"formControlName\", \"month\", \"required\", \"\"], [\"value\", \"January\"], [\"value\", \"February\"], [\"value\", \"March\"], [\"value\", \"April\"], [\"value\", \"May\"], [\"value\", \"June\"], [\"value\", \"July\"], [\"value\", \"August\"], [\"value\", \"September\"], [\"value\", \"October\"], [\"value\", \"November\"], [\"value\", \"December\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"]],\n  template: function AdminAddUnitsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminAddUnitsFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit(ctx.addUnitsForm.value);\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2)(4, \"br\");\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4)(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\", 5);\n      i0.ɵɵtext(10, \"ConsumerID: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6)(12, \"br\");\n      i0.ɵɵelementStart(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Units Consumed: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7)(16, \"br\");\n      i0.ɵɵelementStart(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Year: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9)(20, \"br\");\n      i0.ɵɵelementStart(21, \"label\", 10);\n      i0.ɵɵtext(22, \"Month: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"select\", 11)(24, \"option\", 12);\n      i0.ɵɵtext(25, \"January\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"option\", 13);\n      i0.ɵɵtext(27, \"February\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 14);\n      i0.ɵɵtext(29, \"March\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"option\", 15);\n      i0.ɵɵtext(31, \"April\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"option\", 16);\n      i0.ɵɵtext(33, \"May\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"option\", 17);\n      i0.ɵɵtext(35, \"June\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"option\", 18);\n      i0.ɵɵtext(37, \"July\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"option\", 19);\n      i0.ɵɵtext(39, \"August\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"option\", 20);\n      i0.ɵɵtext(41, \"September\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 21);\n      i0.ɵɵtext(43, \"October\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"option\", 22);\n      i0.ɵɵtext(45, \"November\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"option\", 23);\n      i0.ɵɵtext(47, \"December\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(48, \"br\");\n      i0.ɵɵelementStart(49, \"div\")(50, \"button\", 24);\n      i0.ɵɵtext(51, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(52, \"div\", 25);\n      i0.ɵɵtemplate(53, AdminAddUnitsFormComponent_div_53_Template, 3, 0, \"div\", 26);\n      i0.ɵɵtemplate(54, AdminAddUnitsFormComponent_ng_template_54_Template, 1, 0, \"ng-template\", null, 27, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(56, \"button\", 28);\n      i0.ɵɵlistener(\"click\", function AdminAddUnitsFormComponent_Template_button_click_56_listener() {\n        return ctx.isHidden = !ctx.isHidden;\n      });\n      i0.ɵɵtext(57, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(55);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.addUnitsForm);\n      i0.ɵɵadvance(50);\n      i0.ɵɵproperty(\"disabled\", ctx.addUnitsForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkResultStatus())(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tYWRkLXVuaXRzLWZvcm0vYWRtaW4tYWRkLXVuaXRzLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AdminAddUnitsFormComponent","constructor","billService","username","required","password","unitsConsumed","consumerId","year","month","checkResultStatus","result","length","onSubmit","data","AdminUserName","AdminPassword","addUnitsConsumed","subscribe","console","log","isHidden","onBack","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-add-units-form\\admin-add-units-form.component.ts","C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-add-units-form\\admin-add-units-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BillServiceService } from '../bill-service.service';\n\n@Component({\n  selector: 'app-admin-add-units-form',\n  templateUrl: './admin-add-units-form.component.html',\n  styleUrls: ['./admin-add-units-form.component.css'],\n})\nexport class AdminAddUnitsFormComponent {\n  AdminUserName!: string;\n  AdminPassword!: string;\n  consumerId!: number;\n  year!: number;\n  month!: string;\n  unitsConsumed!: number;\n  result: string = '';\n\n  isHidden: boolean = false;\n  addUnitsForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    unitsConsumed: new FormControl('', [Validators.required]),\n    consumerId: new FormControl('', [Validators.required]),\n    year: new FormControl('', [Validators.required]),\n    month: new FormControl('', [Validators.required]),\n  });\n\n  checkResultStatus() {\n    return this.result.length != 0;\n  }\n\n  constructor(private billService: BillServiceService) {}\n\n  onSubmit(data: any) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.consumerId = data.consumerId;\n    this.unitsConsumed = data.unitsConsumed;\n    this.month = data.month;\n    this.year = data.year;\n    this.billService\n      .addUnitsConsumed(\n        this.AdminUserName,\n        this.AdminPassword,\n        this.month,\n        this.year,\n        this.consumerId,\n        this.unitsConsumed\n      )\n      .subscribe((result) => console.log(result));\n    console.log(this.result);\n    this.isHidden = true;\n  }\n\n  onBack() {\n    this.isHidden = !this.isHidden;\n    this.result = '';\n  }\n}\n","<form\n  [formGroup]=\"addUnitsForm\"\n  (ngSubmit)=\"onSubmit(addUnitsForm.value)\"\n  method=\"get\"\n  [class.hidden]=\"isHidden\"\n>\n  <label for=\"username\">Username: </label>\n  <input\n    type=\"text\"\n    id=\"username\"\n    name=\"username\"\n    formControlName=\"username\"\n    placeholder=\"Enter admin username\"\n    required\n  />\n  <br />\n  <label for=\"password\">Password: </label>\n  <input\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    formControlName=\"password\"\n    placeholder=\"Enter admin password\"\n    required\n  />\n  <br />\n  <label for=\"consumerId\">ConsumerID: </label>\n  <input\n    type=\"text\"\n    id=\"consumerId\"\n    name=\"consumerId\"\n    formControlName=\"consumerId\"\n    placeholder=\"Enter consumer ID\"\n    required\n  />\n  <br />\n  <label for=\"consumerId\">Units Consumed: </label>\n  <input\n    type=\"text\"\n    id=\"unitsConsumed\"\n    name=\"unitsConsumed\"\n    formControlName=\"unitsConsumed\"\n    placeholder=\"Enter units consumed\"\n    required\n  />\n  <br />\n  <label for=\"year\">Year: </label>\n  <input\n    type=\"text\"\n    id=\"year\"\n    name=\"year\"\n    formControlName=\"year\"\n    placeholder=\"Enter year value\"\n    required\n  />\n  <br />\n  <label for=\"month\">Month: </label>\n  <select name=\"month\" id=\"month\" formControlName=\"month\" required>\n    <option value=\"January\">January</option>\n    <option value=\"February\">February</option>\n    <option value=\"March\">March</option>\n    <option value=\"April\">April</option>\n    <option value=\"May\">May</option>\n    <option value=\"June\">June</option>\n    <option value=\"July\">July</option>\n    <option value=\"August\">August</option>\n    <option value=\"September\">September</option>\n    <option value=\"October\">October</option>\n    <option value=\"November\">November</option>\n    <option value=\"December\">December</option>\n  </select>\n  <br />\n  <div>\n    <button [disabled]=\"addUnitsForm.invalid\" type=\"submit\">Submit</button>\n  </div>\n</form>\n<div class=\"result\" [class.hidden]=\"!isHidden\">\n  <div *ngIf=\"checkResultStatus(); else noResultBlock\">\n    <h3>Units Added Successfully</h3>\n  </div>\n  <ng-template #noResultBlock\n    >There was some error adding units. Please check the values\n    again.</ng-template\n  >\n  <button (click)=\"isHidden = !isHidden\">Back</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}