{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminAddUnitsFormComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Units Added Successfully\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminAddUnitsFormComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"There was some error adding units. Please check the values again.\");\n  }\n}\nexport class AdminAddUnitsFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.isHidden = false;\n    this.addUnitsForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      unitsConsumed: new FormControl('', [Validators.required]),\n      consumerId: new FormControl('', [Validators.required]),\n      year: new FormControl('', [Validators.required]),\n      month: new FormControl('', [Validators.required])\n    });\n  }\n  onSubmit(data) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.consumerId = data.consumerId;\n    this.unitsConsumed = data.unitsConsumed;\n    this.month = data.month;\n    this.year = data.year;\n    this.isHidden = true;\n  }\n  get getUserName() {\n    return this.addUnitsForm.get('username');\n  }\n  get getPassword() {\n    return this.addUnitsForm.get('password');\n  }\n  get getId() {\n    return this.addUnitsForm.get('consumerId');\n  }\n  get getUnits() {\n    return this.addUnitsForm.get('unitsConsumed');\n  }\n  get getMonth() {\n    return this.addUnitsForm.get('month');\n  }\n  get getYear() {\n    return this.addUnitsForm.get('year');\n  }\n}\nAdminAddUnitsFormComponent.ɵfac = function AdminAddUnitsFormComponent_Factory(t) {\n  return new (t || AdminAddUnitsFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nAdminAddUnitsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminAddUnitsFormComponent,\n  selectors: [[\"app-admin-add-units-form\"]],\n  decls: 34,\n  vars: 8,\n  consts: [[\"method\", \"get\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter admin username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter admin password\", \"required\", \"\"], [\"for\", \"consumerId\"], [\"type\", \"text\", \"id\", \"consumerId\", \"name\", \"consumerId\", \"formControlName\", \"consumerId\", \"placeholder\", \"Enter consumer ID\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"unitsConsumed\", \"name\", \"unitsConsumed\", \"formControlName\", \"unitsConsumed\", \"placeholder\", \"Enter units consumed\", \"required\", \"\"], [\"for\", \"year\"], [\"type\", \"text\", \"id\", \"year\", \"name\", \"year\", \"formControlName\", \"year\", \"placeholder\", \"Enter year value\", \"required\", \"\"], [\"for\", \"month\"], [\"type\", \"text\", \"id\", \"month\", \"name\", \"month\", \"formControlName\", \"month\", \"placeholder\", \"Enter month value\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"result\"], [4, \"ngIf\", \"ngIfElse\"], [\"noResultBlock\", \"\"], [3, \"click\"]],\n  template: function AdminAddUnitsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminAddUnitsFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit(ctx.addUnitsForm.value);\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2)(4, \"br\");\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4)(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\", 5);\n      i0.ɵɵtext(10, \"ConsumerID: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6)(12, \"br\");\n      i0.ɵɵelementStart(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Units Consumed: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7)(16, \"br\");\n      i0.ɵɵelementStart(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Year: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9)(20, \"br\");\n      i0.ɵɵelementStart(21, \"label\", 10);\n      i0.ɵɵtext(22, \"Month: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 11)(24, \"br\");\n      i0.ɵɵelementStart(25, \"div\")(26, \"button\", 12);\n      i0.ɵɵtext(27, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 13);\n      i0.ɵɵtemplate(29, AdminAddUnitsFormComponent_div_29_Template, 3, 0, \"div\", 14);\n      i0.ɵɵtemplate(30, AdminAddUnitsFormComponent_ng_template_30_Template, 1, 0, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(32, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function AdminAddUnitsFormComponent_Template_button_click_32_listener() {\n        return ctx.isHidden = !ctx.isHidden;\n      });\n      i0.ɵɵtext(33, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(31);\n      i0.ɵɵclassProp(\"hidden\", ctx.isHidden);\n      i0.ɵɵproperty(\"formGroup\", ctx.addUnitsForm);\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"disabled\", ctx.addUnitsForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.isHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", false)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".hidden[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tYWRkLXVuaXRzLWZvcm0vYWRtaW4tYWRkLXVuaXRzLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AdminAddUnitsFormComponent","constructor","billService","username","required","password","unitsConsumed","consumerId","year","month","onSubmit","data","AdminUserName","AdminPassword","isHidden","getUserName","addUnitsForm","get","getPassword","getId","getUnits","getMonth","getYear","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-add-units-form\\admin-add-units-form.component.ts","C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\admin-add-units-form\\admin-add-units-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BillServiceService } from '../bill-service.service';\n\n@Component({\n  selector: 'app-admin-add-units-form',\n  templateUrl: './admin-add-units-form.component.html',\n  styleUrls: ['./admin-add-units-form.component.css'],\n})\nexport class AdminAddUnitsFormComponent {\n  AdminUserName!: string;\n  AdminPassword!: string;\n  consumerId!: number;\n  year!: number;\n  month!: string;\n  unitsConsumed!: number;\n\n  isHidden: boolean = false;\n  addUnitsForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    unitsConsumed: new FormControl('', [Validators.required]),\n    consumerId: new FormControl('', [Validators.required]),\n    year: new FormControl('', [Validators.required]),\n    month: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private billService: BillServiceService) {}\n\n  onSubmit(data: any) {\n    this.AdminUserName = data.username;\n    this.AdminPassword = data.password;\n    this.consumerId = data.consumerId;\n    this.unitsConsumed = data.unitsConsumed;\n    this.month = data.month;\n    this.year = data.year;\n\n    this.isHidden = true;\n  }\n\n  get getUserName() {\n    return this.addUnitsForm.get('username');\n  }\n  get getPassword() {\n    return this.addUnitsForm.get('password');\n  }\n  get getId() {\n    return this.addUnitsForm.get('consumerId');\n  }\n  get getUnits() {\n    return this.addUnitsForm.get('unitsConsumed');\n  }\n  get getMonth() {\n    return this.addUnitsForm.get('month');\n  }\n  get getYear() {\n    return this.addUnitsForm.get('year');\n  }\n}\n","<form\n  [formGroup]=\"addUnitsForm\"\n  (ngSubmit)=\"onSubmit(addUnitsForm.value)\"\n  method=\"get\"\n  [class.hidden]=\"isHidden\"\n>\n  <label for=\"username\">Username: </label>\n  <input\n    type=\"text\"\n    id=\"username\"\n    name=\"username\"\n    formControlName=\"username\"\n    placeholder=\"Enter admin username\"\n    required\n  />\n  <br />\n  <label for=\"password\">Password: </label>\n  <input\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    formControlName=\"password\"\n    placeholder=\"Enter admin password\"\n    required\n  />\n  <br />\n  <label for=\"consumerId\">ConsumerID: </label>\n  <input\n    type=\"text\"\n    id=\"consumerId\"\n    name=\"consumerId\"\n    formControlName=\"consumerId\"\n    placeholder=\"Enter consumer ID\"\n    required\n  />\n  <br />\n  <label for=\"consumerId\">Units Consumed: </label>\n  <input\n    type=\"text\"\n    id=\"unitsConsumed\"\n    name=\"unitsConsumed\"\n    formControlName=\"unitsConsumed\"\n    placeholder=\"Enter units consumed\"\n    required\n  />\n  <br />\n  <label for=\"year\">Year: </label>\n  <input\n    type=\"text\"\n    id=\"year\"\n    name=\"year\"\n    formControlName=\"year\"\n    placeholder=\"Enter year value\"\n    required\n  />\n  <br />\n  <label for=\"month\">Month: </label>\n  <input\n    type=\"text\"\n    id=\"month\"\n    name=\"month\"\n    formControlName=\"month\"\n    placeholder=\"Enter month value\"\n    required\n  />\n  <br />\n  <div>\n    <button [disabled]=\"addUnitsForm.invalid\" type=\"submit\">Submit</button>\n  </div>\n</form>\n<div class=\"result\" [class.hidden]=\"!isHidden\">\n  <div *ngIf=\"false; else noResultBlock\">\n    <h3>Units Added Successfully</h3>\n  </div>\n  <ng-template #noResultBlock\n    >There was some error adding units. Please check the values\n    again.</ng-template\n  >\n  <button (click)=\"isHidden = !isHidden\">Back</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}