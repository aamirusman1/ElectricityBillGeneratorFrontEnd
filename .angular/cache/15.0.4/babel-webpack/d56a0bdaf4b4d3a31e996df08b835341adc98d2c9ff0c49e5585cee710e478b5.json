{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bill-service.service\";\nexport class ConsumerGetBillsByMonthFormComponent {\n  constructor(billService) {\n    this.billService = billService;\n    this.isHidden = false;\n    this.Bills = [];\n    this.consumerForm = new FormGroup({\n      consumerId: new FormControl('', [Validators.required]),\n      month: new FormControl('', [Validators.required]),\n      year: new FormControl('', [Validators.required])\n    });\n  }\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  onSubmit(data) {\n    this.month = data.month;\n    this.year = data.year;\n    this.consumerId = data.consumerId;\n    this.billService.getBillsByMonthConsumer(this.consumerId, this.month, this.year).subscribe(bills => this.Bills = bills);\n    this.isHidden = true;\n  }\n  get getConsumerId() {\n    return this.consumerForm.get('consumerId');\n  }\n  get getMonth() {\n    return this.consumerForm.get('month');\n  }\n  get getYear() {\n    return this.consumerForm.get('year');\n  }\n  onBack() {\n    this.isHidden = !this.isHidden;\n    this.Bills = [];\n  }\n}\nConsumerGetBillsByMonthFormComponent.ɵfac = function ConsumerGetBillsByMonthFormComponent_Factory(t) {\n  return new (t || ConsumerGetBillsByMonthFormComponent)(i0.ɵɵdirectiveInject(i1.BillServiceService));\n};\nConsumerGetBillsByMonthFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConsumerGetBillsByMonthFormComponent,\n  selectors: [[\"app-consumer-get-bills-by-month-form\"]],\n  decls: 2,\n  vars: 0,\n  template: function ConsumerGetBillsByMonthFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"consumer-get-bills-by-month-form works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAWA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AASnE,OAAM,MAAOC,oCAAoC;EAe/CC,YAAoBC,WAA+B;IAA/B,gBAAW,GAAXA,WAAW;IAX/B,aAAQ,GAAY,KAAK;IACzB,UAAK,GAAW,EAAE;IAKlB,iBAAY,GAAG,IAAIJ,SAAS,CAAC;MAC3BK,UAAU,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MACtDC,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MACjDE,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACK,QAAQ,CAAC;KAChD,CAAC;EACoD;EARtDG,gBAAgB;IACd,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,IAAI,CAAC;EAC/B;EAQAC,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACN,KAAK,GAAGM,IAAI,CAACN,KAAK;IACvB,IAAI,CAACC,IAAI,GAAGK,IAAI,CAACL,IAAI;IACrB,IAAI,CAACH,UAAU,GAAGQ,IAAI,CAACR,UAAU;IACjC,IAAI,CAACD,WAAW,CACbU,uBAAuB,CAAC,IAAI,CAACT,UAAU,EAAE,IAAI,CAACE,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC,CAC/DO,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACN,KAAK,GAAGM,KAAM,CAAC;IAC7C,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EACA,IAAIC,aAAa;IACf,OAAO,IAAI,CAACC,YAAY,CAACC,GAAG,CAAC,YAAY,CAAC;EAC5C;EACA,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACF,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC;EACvC;EAEA,IAAIE,OAAO;IACT,OAAO,IAAI,CAACH,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;EACtC;EACAG,MAAM;IACJ,IAAI,CAACN,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAACP,KAAK,GAAG,EAAE;EACjB;;AAvCWR,oCAAoC;mBAApCA,oCAAoC;AAAA;AAApCA,oCAAoC;QAApCA,oCAAoC;EAAAsB;EAAAC;EAAAC;EAAAC;IAAA;MCpBjDC,yBAAG;MAAAA,uDAAuC;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","ConsumerGetBillsByMonthFormComponent","constructor","billService","consumerId","required","month","year","checkBillsStatus","Bills","length","onSubmit","data","getBillsByMonthConsumer","subscribe","bills","isHidden","getConsumerId","consumerForm","get","getMonth","getYear","onBack","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\consumer-get-bills-by-month-form\\consumer-get-bills-by-month-form.component.ts","C:\\Users\\Anushka\\OneDrive\\Documents\\Wiley-Edge\\Angular\\springelectricity1\\src\\app\\consumer-get-bills-by-month-form\\consumer-get-bills-by-month-form.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-consumer-get-bills-by-month-form',\n//   templateUrl: './consumer-get-bills-by-month-form.component.html',\n//   styleUrls: ['./consumer-get-bills-by-month-form.component.css']\n// })\n// export class ConsumerGetBillsByMonthFormComponent {\n\n// }\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Bill } from '../bill';\nimport { BillServiceService } from '../bill-service.service';\n\n@Component({\n  selector: 'app-consumer-get-bills-by-month-form',\n  templateUrl: './consumer-get-bills-by-month-form.component.html',\n  styleUrls: ['./consumer-get-bills-by-month-form.component.css'],\n})\nexport class ConsumerGetBillsByMonthFormComponent {\n  month!: string;\n  year!: number;\n  consumerId!: number;\n  isHidden: boolean = false;\n  Bills: Bill[] = [];\n\n  checkBillsStatus() {\n    return this.Bills.length != 0;\n  }\n  consumerForm = new FormGroup({\n    consumerId: new FormControl('', [Validators.required]),\n    month: new FormControl('', [Validators.required]),\n    year: new FormControl('', [Validators.required]),\n  });\n  constructor(private billService: BillServiceService) {}\n\n  onSubmit(data: any) {\n    this.month = data.month;\n    this.year = data.year;\n    this.consumerId = data.consumerId;\n    this.billService\n      .getBillsByMonthConsumer(this.consumerId, this.month, this.year)\n      .subscribe((bills) => (this.Bills = bills));\n    this.isHidden = true;\n  }\n  get getConsumerId() {\n    return this.consumerForm.get('consumerId');\n  }\n  get getMonth() {\n    return this.consumerForm.get('month');\n  }\n\n  get getYear() {\n    return this.consumerForm.get('year');\n  }\n  onBack() {\n    this.isHidden = !this.isHidden;\n    this.Bills = [];\n  }\n}\n","<p>consumer-get-bills-by-month-form works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}